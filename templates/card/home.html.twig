{% extends 'base.html.twig' %}

{% block title %}Card Game{% endblock %}

{% block body %}
<h1>Card Game</h1>
<p>Cards in deck: {{ cards_in_deck }}</p>

<nav>
    <a href="{{ path('card_deck') }}" class="simple-button">View Deck</a>
    <a href="{{ path('card_shuffle') }}" class="simple-button">Shuffle Deck</a>
    <a href="{{ path('card_draw') }}" class="simple-button">Draw a Card</a>
    <a href="{{ path('card_session_delete') }}" class="simple-button">View Session</a>
</nav>

<p>I detta projekt har vi arbetat med en modell där flera klasser samverkar för att hantera funktionaliteten. Huvudklasserna i applikationen inkluderar:</p>

<ul>
    <li>
        <strong>Controller-klasser:</strong>
        Dessa klasser (till exempel `CardGameController`, `LuckyControllerJson`) hanterar logiken för olika API-rutter och landningssidan.
        Varje controller är ansvarig för en specifik del av applikationens funktionalitet, som att dra kort från en kortlek eller att hantera JSON-svar.
    </li>
    <li>
        <strong>Modellklasser:</strong>
        - `DeckOfCards`: En modell som representerar en kortlek. Den innehåller metoder för att blanda, dra och hantera kort i en standardkortlek.
        - `Card` och `CardGraphic`: Dessa klasser representerar enskilda kort. `Card` hanterar grundläggande egenskaper som färg och värde, medan `CardGraphic` innehåller grafiska representationer av korten.
    </li>
    <li>
        <strong>Relationer mellan klasser:</strong>
        `CardGameController` använder `DeckOfCards` för att hantera kortleken och använder `Card`-klassen för att visa enskilda kort.
        `DeckOfCards` håller en lista över `Card`-objekt och använder `CardGraphic` för att visualisera kort.
    </li>
</ul>

<div>
    <img class="uml" src="{{ asset('img/UML.png') }}" alt="UML diagram">
</div>

{% endblock %}
